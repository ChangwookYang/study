 public int solution(int[] scoville, int K) {
        int answer = 0;
        /*최소힙 */
        Arrays.sort(scoville);
        int[] arr = new int[scoville.length+1];
        for(int i=0; i < scoville.length; i++){
            arr[i+1] = scoville[i];
        }

        int minIdx = 1;
        while(true){
            if(arr[minIdx] < K){
                
                if(minIdx+1 == arr.length){
                    answer = -1;
                    break;
                }

                arr[minIdx+1] = arr[minIdx] + 2*arr[minIdx+1];
                int arrIdx = minIdx+1;  /* 최소값 */
                while(true){
                    boolean isChanged = false;
                    boolean existChild1 = (arr.length > arrIdx*2)?true:false;
                    boolean existChild2 = (arr.length > arrIdx*2+1)?true:false;

                    if(existChild1){
                        if(arr[arrIdx] > arr[arrIdx*2]){
                            if(existChild2){
                                if(arr[arrIdx*2] < arr[arrIdx*2+1]){
                                    int temp = arr[arrIdx];
                                    arr[arrIdx] = arr[arrIdx*2+1];
                                    arr[arrIdx*2+1] = temp;
                                    isChanged = true;
                                    arrIdx = arrIdx*2+1;
                                } else {
                                    int temp = arr[arrIdx];
                                    arr[arrIdx] = arr[arrIdx*2];
                                    arr[arrIdx*2] = temp;
                                    isChanged = true;
                                    arrIdx = arrIdx*2;        
                                }
                            } else {
                                int temp = arr[arrIdx];
                                arr[arrIdx] = arr[arrIdx*2];
                                arr[arrIdx*2] = temp;
                                isChanged = true;
                                arrIdx = arrIdx*2;
                            }
                        } 
                    }
                    
                    if(!isChanged && existChild2){
                        if(arr[arrIdx] > arr[arrIdx*2+1]){
                            int temp = arr[arrIdx];
                            arr[arrIdx] = arr[arrIdx*2+1];
                            arr[arrIdx*2+1] = temp;
                            isChanged = true;
                            arrIdx = arrIdx*2+1;
                        }
                    }

                    if(!isChanged){
                        break;
                    } 
                }
                
                minIdx = minIdx+1;
                answer++;
            } else {
                break;
            }
        }
        
        return answer;
    }
