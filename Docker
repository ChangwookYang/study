/*인터넷검색*/
도커란 무엇인가?
참고링크 : https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html

도커는 컨테이너 기반의 오픈소스 가상화 플랫폼입니다.

도커는 컨테이너를 관리하는 플랫폼

컨테이너라 하면 배에 실는 네모난 화물 수송용 박스를 생각할 수 있는데
각각의 컨테이너 안에는 옷, 신발, 전자제품, 술, 과일등 다양한 화물을 넣을 수 있고
규격화되어 컨테이너선이나 트레일러등 다양한 운송수단으로 쉽게 옮길 수 있습니다.

서버에서 이야기하는 컨테이너도 이와 비슷한데 
다양한 프로그램, 실행환경을 컨테이너로 추상화하고
동일한 인터페이스를 제공하여 프로그램의 배포 및 관리를 단순하게 해줍니다.

백엔드 프로그램, 데이터베이스 서버, 메시지 큐등 어떤 프로그램도 컨테이너로 추상화할 수 있고
조립PC, AWS, Azure, Google cloud등 어디에서든 실행할 수 있습니다.

컨테이너는 격리된 공간에서 프로세스가 동작하는 기술입니다. 
가상화 기술의 하나지만 기존방식과는 차이가 있습니다.
OS단까지 가는건 아니라 속도가 빠르다.

/*유뷰브 보고정리*/
Docker가 뭐고 왜 쓰는건가요?
https://youtu.be/tPjpcsgxgWc


도커는 각 요서들이 설치된 모습을 '이미지'란 형태로 박제해서 저장한다.
각 제품마다 공식적으로 제공되는 이미지도 있고 사용자가 만들수도 있다.
Github처럼 도커 이미지들은 DockerHub이란 곳에 업로드돼어 공유될수 있다.
이미지로 저장된 항목들이 함께 연결돼서 동작하도록 설정된 상태를 명령어 텍스트나 문서 형태로 저장할 수 있다.
설치과정을 어디서든 컴퓨터가 자동으로 재현할 수 있도록  녹화하는 느낌

도커는 이것들을 컴퓨터에 바로 설치하지 않고 '컨테이너'라고 불리는 독립된 가상 공간을 만들어내서 복원한다.
다른 버전의 자바를 돌리는 서비스들도 각각의 컨테이너 안에서 서로 방해받는 일 없이 돌아갈 수 있다.
서버는 뭐가 잘못돼서 고쳐야 하거나 일부를 업그레이드하거나 할때는
일일이 요소들을 정지하고 지우거나 새로깔거나 할 필요없이
컨테이너를 통쨰로 교체해서 새로 실행해버리면 된다.
서버를 관리하고 서비스들을 배포하는 일이 간단해진 원리!
