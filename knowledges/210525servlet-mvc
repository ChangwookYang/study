package springmvc.hello.servlet.web.servletmvc;

import springmvc.hello.servlet.domain.member.Member;
import springmvc.hello.servlet.domain.member.MemberRepository;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

@WebServlet(name="mvcMemberListServlet", urlPatterns = "/servlet-mvc/members")
public class MvcMemberListServlet extends HttpServlet {

    private MemberRepository memberRepository = MemberRepository.getInstance();

    @Override
    protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        System.out.println("MvcMemberListServlet.service");

        List<Member> members = memberRepository.findAll();

        req.setAttribute("members", members);

        String viewPath = "/WEB-INF/views/members.jsp";
        RequestDispatcher dispatcher = req.getRequestDispatcher(viewPath);
        dispatcher.forward(req, resp);
    }

}

한계

포워드 중복
RequestDispatcher dispatcher = request.getRequestDispacher(viewPath);
dispatcher.forward(request, response);

ViewPath 중복
String viewPath = “/WEB-INF/views/new-form.jsp“; 

사용하지 않는 코드
HttpServletRequest request, HttpServletResponse response;
특히 response는 사용되지 않음

공통 처리가 어렵다.
공통처리를 하더라도 함수를 호출해야하는게 불편하다

공통처리는 어려우므로 컨트롤러 호출 전에 먼저 공통 처리를 해야한다.
즉, 수문장 역할을 하는 프론트 컨트롤러(Front Controller) 패턴이 필요하다.


프론트 컨트롤러 소개

* FrontController의 특징
    * 프론트 컨트롤러 서블릿 하나로 클라이언트 요청을 받음
    * 프론트 컨트롤러가 요청에 맞는 컨트롤러를 찾아서 호출
    * 입구를 하나로!
    * 공통처리 가능
    * 프론트 컨트롤러를 제외한 나머지 컨트롤러는 서블릿을 사용하지 않아도 됨.
* 스프링 웹 MVC의 핵심도 바로 FrontController
    * 스프링 웹 MVC의 DispatcherServlet이 FrontController 패턴으로 구현되어 있다!


@WebServlet(name = "frontControllerServletV1", urlPatterns = "/front-controller/v1/*")
public class FrontControllerServletV1 extends HttpServlet {

    private Map<String, ControllerV1> controllerV1Map = new HashMap<>();

    public FrontControllerServletV1() {
        controllerV1Map.put("/front-controller/v1/members/new-form", new MemberFormControllerV1());
        controllerV1Map.put("/front-controller/v1/members/save", new MemberSaveControllerV1());
        controllerV1Map.put("/front-controller/v1/members", new MemberListControllerV1());
    }

    @Override
    protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        System.out.println("FrontControllerServletV1.service");

        String requestURI = request.getRequestURI();

        ControllerV1 controller = controllerV1Map.get(requestURI);
        if(controller == null){
            response.setStatus(HttpServletResponse.SC_NOT_FOUND);
            return;
        }

        controller.process(request, response);
    }
}
