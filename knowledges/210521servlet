<%@ page import="springmvc.hello.servlet.domain.member.Member" %>
<%@ page import="springmvc.hello.servlet.domain.member.MemberRepository" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%
    MemberRepository memberRepository = MemberRepository.getInstance();

    System.out.println("MemberSaveServlet.service");
    String username = request.getParameter("username");
    int age = Integer.parseInt(request.getParameter("age"));

    Member member = new Member(username, age);
    memberRepository.save(member);
%>

<html>
<head>
    <title>Title</title>
</head>
<body>

</body>
</html>


<%@ page import="springmvc.hello.servlet.domain.member.MemberRepository" %>
<%@ page import="springmvc.hello.servlet.domain.member.Member" %>
<%@ page import="java.util.List" %>
<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%
    MemberRepository memberRepository = MemberRepository.getInstance();
    List<Member> members = memberRepository.findAll();
%>
<html>
<head>
    <title>Title</title>
</head>
<body>
<a href="/index.html">메인</a>
<table>
    <thead>
    <th>id</th>
    <th>username</th>
    <th>age</th>
    </thead>
    <tbody>
    <%
        for (Member member : members) {
            out.write("    <tr>");
            out.write("         <td>" + member.getId() + "</td>");
            out.write("         <td>" + member.getUsername() + "</td>");
            out.write("         <td>" + member.getAge() + "</td>");
            out.write("    </tr>");
        }
    %>
    </tbody>
</table>
</body>
</html>

<!--

서블릿으로 개발할때는 뷰와 자바코드가 섞여서 지저분하다
JSP는 HTMl을 깔끔하게 하지만 고민이 남는다.

비지니스 로직이고 뷰와 영역이 섞여있다.
다양한 코드가 모두 JSP에 있어 JSP에서 너무 많은 역할을한다.

-->
