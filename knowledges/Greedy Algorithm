그리디 알고리즘(탐욕 알고리즘)

	- 매 선택에서 지금 이 순간 당장 최적인 답을 선택하여 적합한 결과를 도출하자!
	
	ex) 5개의 도시를 모두 한번씩만 거쳐서 여행할 때 기름값을 아끼고 싶다.
	-> 지금 도시로부터 가장 가까운 도시로 가자!
	
	ex) 10 10 3 23 근사값 24를 만들어야하나 못만들었음
	
	- 그리디 알고리즘은 매 선택이 순간에 대해서는 최적이지만 
	종합적으로 봤을때는 최적이라는 보장은 절!대! 없다!
	ex) 위의 5개 도시 예를 들었을 때 순간의 최적으로 가면 1-1-1-100이 될수도 있는데
	  사실은 1-1-10-10이 있을수도 있다.
	
	- 대표적인 문제 <거스름돈 문제>
	동전들은 10, 50, 100, 500 돈이 딱딱 떨어지니까 3,370원을 거슬러주고 가장 작은 동전의 수를 구하는건 쉽다.
	500 x 6 + 300 x 1 + 50 x 1 + 10 x 2 = 3,370
	300 + 50 + 20 = 370 
	
	- 그럼! 그리디 알고리즘은 언제 사용해야하는가?
		a. 한번의 선택이 다음 선택에 전혀 무관한 값일때(순간의 최적해가 독립적일때)
		b. 매 순간의 최적해가 문제에 대한 최적해일때 사용할 수 있다!(동전)
	
	- 그리디 알고리즘은 100% 최적해를 보장해주지는 않으나 어느정도 적합한 수준의 해답을 알려줄 수 있다.
	따라서 최적이 아닌 "되는가" 또는 "적당히 괜찮은 방법"을 찾을 때 유용하다.
	특히, 계산속도가 빨라 실용적으로 사용 가능하다. O(n)
	해답을 찾아가는 과정에 있어서 그리디로 구한 값을 비교값으로 설정하는 경우도 있다한다!
