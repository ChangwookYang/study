4/4 글쓰기

##### DispatcherServlet 구조살펴보기

스프링 mvc도 프론트 컨트롤러 패턴으로 구현되어 있다.

스프링 mvc의 프론트 컨트롤러가 바로 디스패쳐 서블릿이다.

그리고 이 디스패처 서블릿이 바로 스프링 MVC의 핵심이다.

##### DispacherServlet 서블릿 등록

DispacherServlet도 부모 클래스에서 HttpServlet을 상속받아서 사용하고, 서블릿으로 동작한다.

> DispacherServlet -> FrameworkServlet -> HttpServletBean -> HttpServlet

스프링 부트는 DispacherServlet을 자동으로 등록하면서  모든 경로(urlPatterns="/")에 대해 매핑한다.

> 더 자세한 경로가 우선순위가 높다. 그래서 기존에 등록한 서블릿도 함께 동작한다.

##### 요청 흐름

서블릿이 호출되면 HttpServlet이 제공하는 service()가 호출된다.

스프링 MVC는 DispatcherServlet의 부모인 FrameworkServlet에서 service()를 오버라이드하였다.

FrameworkServlet.service()를 시작으로 여러 메서드가 호출되면서 DispacherServlet.doDispatch가 호출된다.

##### 동작 순서

1. 핸들러 조회 : 핸들러 매핑을 통해 요청 URL에 핸들러(컨트롤러)를 조회한다.
2. 핸들러 어댑터 조회 : 핸들러를 실행할 수 있는 핸들러 어댑터를 조회한다.
3. 핸들러 어댑터 실행 : 핸들러를 실행한다.
4. 핸들러 실행 : 핸들러 어댑터가 실제 핸들러를 실행한다.
5. ModelAndView반환 : 핸들러 어댑터는 핸들러가 반환하는 정보를 ModelAndView로 변환해서 반환한다.
6. viewResovler 호출 : 뷰 리졸버를 찾고 실행한다.
7. View반환 : 뷰 리졸버는 뷰의 논리이름을 물리이름으로 바꾸고 렌더링 역할을 담당하는 뷰 객체를 반환
8. 뷰 렌더링 : 뷰를 통해서 뷰를 렌더링한다.

![image](https://blog.kakaocdn.net/dn/MRXX3/btqK7014LOZ/wMKgG9RVkdZR7Ag5nD4wh0/img.png)

열공하자..^^
